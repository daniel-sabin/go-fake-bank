openapi: 3.0.0
info:
  title: API demo bank
  description: API qui emule la récuperation des comptes d'un utilisateur
  version: 0.1.9
servers:
  - url: http://localhost:8000/
    description: Server en cours de développement (local)
  - url: https://dsague.fr
    description: Internal staging server for testing
components:
  securitySchemes:
    ApiKeyAuth: # arbitrary name for the security scheme
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: X-API-KEY # name of the header, query parameter or cookie
  responses:
    UnauthorizedError:
      description: API key is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string
  schemas:
    Account:
      type: object
      properties:
        acc_number:
          type: string
        amount:
          type: string
        currency:
          type: string
          enum:
            - EUR
            - USD
      required:
        - acc_number
        - type
        - currency
    Transaction:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        sign:
          type: string
          enum:
            - CDT
            - DBT
        amount:
          type: number
        currency:
          type: string
          enum:
            - EUR
    Client:
      type: object
      properties:
        client_name:
          type: string
        client_id:
          type: string
        client_secret:
          type: string
      required:
        - client_name
security:
  - ApiKeyAuth: []

paths:
  /health:
    get:
      summary: Returns ok if server is alive
      description: ''
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '200': # status code
          description: Just OK
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
                example: ok
  /applications:
    get:
      summary: Get all registered app
      description: ''
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '200': # status code
          description: Just OK
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
                example: ok
    post:
      summary: Create your application
      description: ''
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                client_name:
                  type: string
            example:
              client_name: Fluffy_application
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '200': # status code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
              example:
                client_name: Fluffy_application
                client_id: ad563b92-e894-4114-a20c-2a00a97def26
                client_secret: c616a3ef-ac13-4398-af14-98fab5001534
  /accounts:
    get:
      summary: Gets a user accounts.
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '200': # status code
          description: Just OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                      next:
                        type: string
      parameters:
        - in: query
          name: page
          type: integer
          description: Accounts page.
  /accounts/{accountNumber}/transactions:
    get:
      summary: Gets account transactions.
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '200': # status code
          description: Just OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                      next:
                        type: string
      parameters:
        - in: query
          name: page
          type: integer
          description: Transactions page.
        - in: path
          name: accountNumber
          type: string
          description: Account number.
